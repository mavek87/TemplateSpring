plugins {
    id "java"
    id "org.springframework.boot" version "3.3.3"
    id "io.spring.dependency-management" version "1.1.6"
    id "com.google.cloud.tools.jib" version "3.4.3"
}

group = "com.matteoveroni.templatestring"
version = "1.0.0"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

bootJar {
    archiveFileName = "prova.jar"
}

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.6.0"
    mapstructSpringExtensionsVersion = "1.1.2"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    // Spring security
    implementation "org.springframework.boot:spring-boot-starter-security"
    // Spring security - Resource server dependencies - https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/jwt.html
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation "org.springframework.security:spring-security-oauth2-jose:6.3.3"

    // Lombok - Important note: Lombok before Mapstruct
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // Mapstruct - Important note: Mapstruct after Lombok
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
//    implementation "org.mapstruct.extensions.spring:mapstruct-spring-annotations:${mapstructSpringExtensionsVersion}"
//    annotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-extensions:${mapstructSpringExtensionsVersion}"
//    testAnnotationProcessor "org.mapstruct.extensions.spring:mapstruct-spring-extensions:${mapstructSpringExtensionsVersion}"

    runtimeOnly "org.postgresql:postgresql"

//    implementation "org.springframework.boot:spring-boot-starter-webflux"

    developmentOnly "org.springframework.boot:spring-boot-devtools"
    developmentOnly "org.springframework.boot:spring-boot-docker-compose"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
}

tasks.named("test") {
    useJUnitPlatform()
}

jib {
    def tag = "latest"
    from {
        image = "azul/zulu-openjdk:21-jre-headless"
    }
    to {
        image = "registry.hub.docker.com/mavek87/template_spring"
        auth {
            username = "${dockerhub_registry_username}"
            password = "${dockerhub_registry_password}"
        }
    }
}